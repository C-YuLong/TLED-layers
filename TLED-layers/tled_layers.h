void Approximate_Dot(const float* input1, const float* input2, float* output, int height, int k, int width, float x_max, float y_max, int approximate);
void Approximate_multiplication_derivative_GPU(const float *weights, const float *x, float *out_grad, int height, int k, int width, float x_max, float y_max, int approximate);
void Approximate_convolution(const float* image, const float* kernel, float *output, const int stride, const int padding_h, const int padding_w, const int kernel_size, const int batch_size, const int height, const int width, const int in_channels, const int out_channels, const float x_max, const float y_max, const int approximate);
void Convolution_Parameter_Gradient_GPU(const float *image, const float *kernel, const float *delta, float *approximate_grad, const int stride, const int padding_h, const int padding_w, const int kernel_size, const int batch_size, const int height, const int width, const int in_channels, const int out_channels, const int height_col, const int width_col, const float x_max, const float y_max, const int approximate);
void Approximate_AnyDot(const float* input1, const float* input2, float* output, int height, int k, int width, float x_max, float y_max, int *Approximate_LUT);
void Approximate_Anyconvolution(const float* image, const float* kernel, float *output, const int stride, const int padding_h, const int padding_w, const int kernel_size, const int batch_size, const int height, const int width, const int in_channels, const int out_channels, const float x_max, const float y_max, int *Approximate_LUT);